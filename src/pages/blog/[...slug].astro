---
import { type CollectionEntry, getCollection, render } from "astro:content";
import Root from "@/layouts/Root.astro";
import FormattedDate from "@/components/FormattedDate.astro";
import { Image } from "astro:assets";
import ToC from "@/components/ToC";
import Comments from "@/components/Comments.astro";
import { Button } from "@/components/ui/button";
import { ChevronLeft, ChevronRight, ExternalLinkIcon } from "lucide-react";
import { Badge } from "@/components/ui/badge";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.id },
    props: post,
  }));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
const { Content, headings } = await render(post);
---

<Root
  title={`Joseph Abbey - ${post.data.title}`}
  description={post.data.description}
  image={post.data.cover}
>
  <!-- {
    post.data.cover && (
      <div class='mx-4'>
        <Image
          src={post.data.cover}
          alt='Cover Image'
          class='max-h-[50svh] w-full rounded-3xl object-cover'
          transition:name={`${post.id} image`}
        />
      </div>
    )
  } -->
  <div class="mx-auto max-w-3xl px-2">
    {
      post.data.cover && (
        <Image
          src={post.data.cover}
          alt="Cover Image"
          class="w-full rounded-3xl object-cover"
          transition:name={`${post.id} image`}
        />
      )
    }

    <div class="markdown mt-10">
      <h1 transition:name={`${post.id} title`}>
        {post.data.title}
      </h1>
      <FormattedDate
        class="text-muted-foreground text-sm"
        date={post.data.pubDate}
      />

      <div class="mb-4 flex flex-row-reverse flex-wrap gap-2">
        {
          post.data.original && (
            <a
              href={post.data.original}
              target="_blank"
              rel="noopener noreferrer"
              data-md-no-style
            >
              <Badge variant="secondary">
                Original Post
                <ExternalLinkIcon />
              </Badge>
            </a>
          )
        }
      </div>

      <!-- <ToC client:load headings={headings} /> -->

      <Content />
    </div>

    <div class="mt-4 pb-12">
      {
        post.data.previous && (
          <a
            href={`/blog/${post.data.previous.id}`}
            data-astro-prefetch
            transition:animate="slide"
          >
            <Button className="float-start">
              <ChevronLeft /> Previous
            </Button>
          </a>
        )
      }
      {
        post.data.next && (
          <a
            href={`/blog/${post.data.next.id}`}
            data-astro-prefetch
            transition:animate="slide"
          >
            <Button className="float-end">
              Next <ChevronRight />
            </Button>
          </a>
        )
      }
    </div>

    <div class="mt-8">
      {
        post.data.original ? (
          <p class="text-muted-foreground text-center text-sm">
            To leave a comment, please visit the{" "}
            <a
              href={post.data.original}
              target="_blank"
              rel="noopener noreferrer"
              class="text-primary hover:underline"
            >
              original post
              <ExternalLinkIcon className="inline h-4 w-4" />
            </a>
          </p>
        ) : (
          <Comments />
        )
      }
    </div>
  </div>
</Root>
